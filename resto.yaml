---
- hosts: resto

  vars_files:
    - playbooks/vars.yaml

  tasks:
    - name: Install docker and other packages
      package:
        name:
          - docker.io
          - docker-compose
          - postgresql-client
    - name: Config docker MTU
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": {{ mtu }}
          }
        mode: 0644
      notify: Reload docker
    - name: Git Repository
      import_tasks: playbooks/git-repo.yaml
    - name: Config
      vars:
        endpoint_hostname: "{{ public_hostname | default(fip_hostname) }}"
      block:
        - name: Config strings
          vars:
            config:
              ACTIVATE_USER_ENDPOINT: "http://{{ endpoint_hostname }}/activate/{:token:}"
              ADMIN_USER_PASSWORD: "{{ secret_admin_password }}"
              DATABASE_HOST: "{{ groups['resto-db'][0] | default('restodb') }}"
              DATABASE_USER_PASSWORD: "{{ secret_db_password | default('resto') }}"
              JWT_PASSPHRASE: "{{ secret_jwt_passphrase }}"
              PUBLIC_ENDPOINT: "http://{{ endpoint_hostname }}"
              RESET_PASSWORD_ENDPOINT: "http://{{ endpoint_hostname }}/resetPassword/{:token:}"
              SENDMAIL_SENDER_EMAIL: "noreply@{{ email_hostname | default(fip_hostname) }}"
              SENDMAIL_SMTP_HOST: "{{ smtp_host }}"
              SENDMAIL_SMTP_PORT: "{{ smtp_port }}"
              # problem with CA certificates in containers (requires changes in resto app)
              SENDMAIL_SMTP_SECURE: "none"
          lineinfile:
            path: /root/resto-git/config.env
            regexp: '^[ #]*{{ item.key }}\s*=.*'
            line: "{{ item.key }}=\"{{ item.value }}\""
          loop: "{{ config | dict2items }}"
          notify: Reconfigure resto
        - name: Config non-strings
          vars:
            config:
              SENDMAIL_SMTP_ACTIVATE: "true"
              SENDMAIL_SMTP_DEBUG: "1"
              USER_AUTOACTIVATION: "false"
          lineinfile:
            path: /root/resto-git/config.env
            regexp: '^[ #]*{{ item.key }}\s*=.*'
            line: "{{ item.key }}={{ item.value }}"
          loop: "{{ config | dict2items }}"
          notify: Reconfigure resto

  handlers:
    - name: Reconfigure resto
      debug:
        msg: "Launch manually: cd ~/resto-git && ./deploy prod"
    - name: Reload docker
      service:
        name: docker
        state: restarted
